name: video-scanner

services:

  # MySQL Database
  mysql:
    image: mysql:latest
    container_name: $MYSQL_HOST
    restart: always

    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD} # Root password
      - MYSQL_USER=${MYSQL_USER} # User
      - MYSQL_PASSWORD=${MYSQL_PASSWORD} # User password

    ports:
      - "${MYSQL_PORT}:3306" # MySQL port

    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql # Initialize database
      - ./my.cnf:/etc/mysql/my.cnf # MySQL configuration
      - mysql_data:/var/lib/mysql # Persist MySQL data

    networks:
      - application

    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"] # Check if MySQL is up
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # FastAPI Authentication Service
  fastapi-auth:
    build: ./authentication-service
    restart: always

    ports:
      - "8000:8000" # FastAPI port

    depends_on:

      mysql:
        condition: service_healthy # Wait for MySQL to be healthy

      rabbitmq:
        condition: service_healthy # Wait for RabbitMQ to be healthy

    env_file:
      - .env  # Load environment variables from .env file

    networks:
      - application

  # Message Broker - RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always

    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER} # RabbitMQ user
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS} # RabbitMQ password

    ports:
      - "${RABBITMQ_AMQP_PORT}:5672"  # AMQP - RabbitMQ Messaging Protocol port
      - "${RABBITMQ_MANAGEMENT_PORT}:15672" # RabbitMQ Management Console port - http://localhost:15672

    volumes:
      - rabbitmq_data:/var/lib/rabbitmq  # Persist RabbitMQ data
      - rabbitmq_config:/etc/rabbitmq    # Persist RabbitMQ configuration

    networks:
      - application

    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"] # Check if RabbitMQ is up
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  mysql_data: # MySQL data volume
  rabbitmq_data: # RabbitMQ data volume
  rabbitmq_config: # RabbitMQ configuration volume


networks:
  application:
    driver: bridge